# printf %s "$SSH_ORIGINAL_COMMAND" | awk '
# BEGIN{"realpath ~" | getline home
# dir= home "/inject/"
# FS="[ ]*:::[ ]*|\\.\\.|;|{|}|(|)|$"}
# $1 && $2 && $3 {
#     if (substr($2,1,1) == "/") {
#         print "No absolute paths"
#         exit
#     }
#     cmd = dir "inject -C "dir" -l "$1" ::: "$2" ::: check"
#     cmd | getline c
#     print (c != "" && c == $3 $4)? "Correct" : "Wrong"
#     exit
#     }
# '

# Forced command checker for inject
# JUMPID ::: FLAGDIR ::: STRING
# Compares the contents of last_run/flag/FLAGDIR/target/[JUMP ssh command]/stdout to the STRING
# Attempts to strip .. and force relative path traversal
#
# Example server: sudo /usr/sbin/sshd -f sshd_checker.config -p 1234
# Example query : ssh dev@localhost -p 1234 1 ::: f1 ::: some flag text

Protocol 2
PermitRootLogin without-password
PasswordAuthentication no 
PermitEmptyPasswords no
AllowAgentForwarding no
AllowTcpForwarding no
AllowStreamLocalForwarding no
GatewayPorts no
PermitTunnel no
#PermitTTY no
AllowTcpForwarding no
UseDNS no
Port 1234

Match User *
    AuthorizedKeysCommandUser nobody
    AuthorizedKeysCommand /bin/echo 'restrict,pty %t %k'

    ForceCommand awk 'BEGIN{a=PROCINFO["ppid"] ; for(i=1;i<=3;i++){ ("ps h -fp " a) | getline pid ; $0=pid; a=$3 } ; while ((("cat /proc/" a "/cmdline") | getline d) > 0){FS="\0| " ; $0=d }; $0=$0 ; for(i=1;i<=NF && $i != "-f" ;i++){} ; file=$(i+1) ; hash=sprintf("%c",35); while(((getline line < file) > 0) && substr(line,1,1) == hash ){ line = substr(line,3,length(line)-2) ; prog = prog "\n" line ; } ; system(prog); exit }'

# live-reload:
# ls poly.config | entr bash -c "sudo /usr/sbin/sshd -d -f ./poly.config -D & sleep 0.4 ; ssh user@localhost -p1234 -oConnectTimeout=1 -t 3 4"
#
# Run:
# sudo /usr/sbin/sshd -D -f ~/inject/poly.config
