# Forced command checker for inject
# JUMPID ::: FLAGDIR ::: STRING
# Compares the contents of last_run/flag/FLAGDIR/target/[JUMP ssh command]/stdout to the STRING
# Attempts to strip .. and force relative path traversal
#
# Example server: sudo /usr/sbin/sshd -f sshd_checker.config -p 1234
# Example query : ssh dev@localhost -p 1234 1 ::: f1 ::: some flag text
#
# Assumes the flags are defined in ~/inject/ and the results are in ~/inject/last_run
# Assumes jumphosts are defined in ~/inject/sshloginfile
#
# Results structure:
# last_run/flag/<flag>/maketarget/target/ssh -J root@<jumphost> root@<target>/stdout

Protocol 2
PermitRootLogin without-password
PasswordAuthentication no 
PermitEmptyPasswords no
AllowAgentForwarding no
AllowTcpForwarding no
AllowStreamLocalForwarding no
GatewayPorts no
PermitTunnel no
PermitTTY no
AllowTcpForwarding no
UseDNS no
Port 1234

Match User *
    #AuthorizedKeysCommandUser root
    #AuthorizedKeysCommand /bin/echo %t %k

    # This version checks using local make check
    ForceCommand printf %s "$SSH_ORIGINAL_COMMAND" | awk 'BEGIN{"realpath ~" | getline home ; dir= home "/inject/" ; FS="[ ]*:::[ ]*|\\.\\.|;|{|}|(|)|$"}{cmd = dir "inject -C " dir " -l " $1 " ::: " $2 " ::: check"; cmd | getline c; print (c != "" && c == $3 $4)? "Correct" : "Wrong"}'

    # This version checks using last_run results directory
    #ForceCommand printf %s "$SSH_ORIGINAL_COMMAND" | awk 'BEGIN{"realpath ~" | getline home ; dir= home "/inject/" ; FS="[ ]*:::[ ]*|\\.\\."}{for(i=1;i<=$1 && $1 == $1 + 0 ;i++){ getline a < ( dir "sshloginfile") } ; getline b < (dir $2 "/target") ; file = dir "last_run/flag/" $2 "/maketarget/target/ssh -J root@" a " root@" b "/stdout" ; getline c < file ; print (c != "" && c == $3)? "Correct" : "Wrong"}'
